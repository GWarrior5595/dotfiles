#            ██   ██                               ████ ██
#     █████ ░░   ░██                              ░██░ ░░   █████
#    ██░░░██ ██ ██████  █████   ██████  ███████  ██████ ██ ██░░░██
#   ░██  ░██░██░░░██░  ██░░░██ ██░░░░██░░██░░░██░░░██░ ░██░██  ░██
#   ░░██████░██  ░██  ░██  ░░ ░██   ░██ ░██  ░██  ░██  ░██░░██████
#    ░░░░░██░██  ░██  ░██   ██░██   ░██ ░██  ░██  ░██  ░██ ░░░░░██
#     █████ ░██  ░░██ ░░█████ ░░██████  ███  ░██  ░██  ░██  █████

[user]
	name = Nefari0uss
	email = nnefari0uss@gmail.com

[push]
	default = simple # Simple pushes 1-1. Matching will push all.

[core]
	autocrlf = input
	editor = vim

[color]
	ui = true
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = red reverse
    local = blue
    remote = green

[color "diff"]
    new = yellow bold
    frag = magenta bold
    old = red bold
    meta = green bold

[color "status"]
    added = blue
    changed = green
    untracked = cyan

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[help]
	autocorrect = 1

[alias]
    # common commmands
    st = status
    sts = status -s
    cm = commit -m
    co = checkout
    df = diff
    l = log -p
    cb = checkout -b
    cp = cherry-pick
    sl = stash list
    wip = stash
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend -m
    ammend = amend # because fuck spelling
    unstage = reset HEAD --

    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

    # list aliases
    alist = "!git config -l | grep alias | cut -c 7-"

    # see gitk?
    gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
    
    # see what's new after the latest commit
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'

    # alternative to git reset HEAD --hard; unreachable commit can be found with reflog
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard 
    
    # go through project history
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -" # name as param
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short # commit name as param 

    # pretty git logs
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative # nice graph?
    lc = log ORIG_HEAD.. --stat --no-merges # list all new commits after a fetch, sans merges
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate # single line
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat # list by author
    llnc = log --pretty=format:"%h\\ %s\\ [%cn]" # list by author, no colors
    
